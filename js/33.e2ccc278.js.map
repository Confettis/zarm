{"version":3,"sources":["webpack:///./web/docs/contributing.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/33.e2ccc278.js","sourcesContent":["export default \"# 贡献 Zarm\\n\\n## 安装\\n\\n`git clone` 拉取代码仓库后，安装依赖\\n\\n```bash\\n# 不要用 npm 安装\\n$ yarn\\n```\\n\\n然后, 你可以运行 `Zarm Design` 的本地站点。\\n\\n```bash\\n# 开发 h5 端\\n$ yarn dev\\n```\\n\\n如果你想运行 `Zarm Design` 的 `react-native` 示例, 那么\\n\\n```bash\\n# 开发 react-native 端\\n$ cd rnkit && yarn install && cd ios && pod install && cd ../..\\n\\n# 开发 iOS 端\\n$ yarn dev:ios\\n\\n# 开发 Android 端\\n$ yarn dev:android\\n```\\n\\n## 检查\\n\\n代码风格检查。\\n\\n```bash\\n$ yarn lint\\n\\n# Typescript 文件检查\\n$ yarn lint:ts\\n\\n# Javascript 文件检查\\n$ yarn lint:js\\n\\n# 样式文件检查\\n$ yarn lint:style\\n```\\n\\n## 测试\\n\\n运行完整的单元测试用例。\\n\\n```bash\\n$ yarn test\\n\\n# 单独测试 h5 版本\\n$ yarn test:h5\\n\\n# 单独测试 react-native 版本\\n$ yarn test:rn\\n\\n# 输出单元测试覆盖率\\n$ yarn test:h5 --coverage\\n```\\n\\n## 编译\\n\\n将 TypeScript 代码编译到 `lib` 和 `es` 目录，并在 `dist` 目录中创建 zarm 的 UMD 版本。\\n\\n```bash\\n$ yarn build\\n\\n# 编译 esm\\n$ yarn build:es\\n\\n# 编译 lib\\n$ yarn build:lib\\n\\n# 编译 umd\\n$ yarn build:umd\\n\\n# 编译 react-native 的 iOS 安装包\\n$ yarn build:ios\\n\\n# 编译 react-native 的 Android 安装包\\n$ yarn build:android\\n```\\n\";"],"sourceRoot":""}