{"version":3,"sources":["webpack:///./components/keyboard/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/50.062c05f2.js","sourcesContent":["export default \"# Keyboard 虚拟键盘\\n\\n\\n\\n## Keyboard 平铺键盘\\n```jsx\\nimport { useState } from 'react';\\nimport { Cell, Radio, Keyboard } from 'zarm';\\n\\nconst Demo = () => {\\n  const [type, setType] = useState('number');\\n\\n  return (\\n    <>\\n      <Cell\\n        title=\\\"键盘类型\\\"\\n        description={\\n          <Radio.Group\\n            compact\\n            type=\\\"button\\\"\\n            value={type}\\n            onChange={setType}\\n          >\\n            <Radio value=\\\"number\\\">数字键盘</Radio>\\n            <Radio value=\\\"price\\\">金额键盘</Radio>\\n            <Radio value=\\\"idcard\\\">身份证键盘</Radio>\\n          </Radio.Group>\\n        }\\n      />\\n      <Keyboard type={type} onKeyClick={(key) => console.log(key)} />\\n    </>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## KeyboardPicker 键盘触发器\\n```jsx\\nimport { useState } from 'react';\\nimport { Cell, Button, KeyboardPicker, Input } from 'zarm';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState(false);\\n  const [value, setValue] = useState('');\\n\\n  const toggle = () => {\\n    setVisible(!visible);\\n  };\\n\\n  const onKeyClick = (key) => {\\n    console.log(key);\\n    if (['close', 'ok'].indexOf(key) > -1) {\\n      toggle();\\n      return;\\n    }\\n\\n    const value = [].concat(value);\\n    const newValue = (key === 'delete')\\n      ? value.slice(0, value.length - 1)\\n      : value + key;\\n\\n    if (newValue !== value) {\\n      setValue(newValue);\\n    }\\n  };\\n\\n  return (\\n    <>\\n      <Cell\\n        description={\\n          <Button size=\\\"xs\\\" onClick={toggle}>{visible ? '关闭' : '开启'}</Button>\\n        }\\n      >\\n        拾取器触发方式\\n      </Cell>\\n\\n      <KeyboardPicker\\n        visible={visible}\\n        onKeyClick={onKeyClick}\\n      />\\n    </>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| type | string | 'number' | 键盘类型，可选值 `number`、`price`、`idcard` |\\n| onKeyClick | (key?: string) => void | - | 点击按键时触发的回调函数 |\\n\\n### 仅 KeyboardPicker 支持的属性\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| visible | boolean | false | 是否展示 |\\n| destroy | boolean | true | 弹层关闭后是否移除节点 |\\n\";"],"sourceRoot":""}