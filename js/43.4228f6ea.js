(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{707:function(e,n,o){"use strict";o.r(n),n.default='# Checkbox \u590d\u9009\u6846\n\n## \u57fa\u672c\u7528\u6cd5\n\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nReactDOM.render(\n  <>\n    <Cell>\n      <Checkbox>\u666e\u901a</Checkbox>\n    </Cell>\n    <Cell>\n      <Checkbox defaultChecked>\u9ed8\u8ba4\u9009\u4e2d</Checkbox>\n    </Cell>\n    <Cell>\n      <Checkbox disabled>\u7981\u7528</Checkbox>\n    </Cell>\n    <Cell>\n      <Checkbox defaultChecked disabled>\n        \u9009\u4e2d\u4e14\u7981\u7528\n      </Checkbox>\n    </Cell>\n    <Cell>\n      <div className="agreement-box">\n        <Checkbox id="agreement" />\n        <label htmlFor="agreement">\n          \u9605\u8bfb\u5e76\u540c\u610f\n          <a\n            href="/#"\n            onClick={(e) => {\n              e.preventDefault();\n              alert(\'agree it\');\n            }}\n          >\n            \u300aXXX\u6761\u6b3e\u300b\n          </a>\n          \u4e2d\u7684\u76f8\u5173\u89c4\u5b9a\n        </label>\n      </div>\n    </Cell>\n  </>,\n  mountNode,\n);\n```\n\n## \u53d7\u63a7\u4f7f\u7528\n\n```jsx\nimport { useState } from \'react\';\nimport { Cell, Checkbox, Modal } from \'zarm\';\n\nconst Demo = () => {\n  const [checked, setChecked] = useState(false);\n\n  const onChange = (e) => {\n    if (!e.target.checked) {\n      Modal.confirm({\n        content: \'\u662f\u5426\u8981\u53d6\u6d88\u9009\u62e9\',\n        cancelText: \'\u4e0d\u53d6\u6d88\',\n      }).then((res) => {\n        res && setChecked(false);\n      });\n      return;\n    }\n    setChecked(true);\n  };\n\n  return (\n    <Cell>\n      <Checkbox checked={checked} onChange={onChange}>\n        \u53d6\u6d88\u52fe\u9009\u524d\u786e\u8ba4\n      </Checkbox>\n    </Cell>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## \u7ec4\u5408\u4f7f\u7528\n\n```jsx\nimport { useState } from \'react\';\nimport { Cell, Checkbox } from \'zarm\';\n\nconst Demo = () => {\n  const [value, setValue] = useState([]);\n\n  const onCheckedAll = (e) => {\n    setValue(e.target.checked ? [\'0\', \'1\', \'2\'] : []);\n  };\n\n  return (\n    <>\n      <Cell>\n        <Checkbox\n          checked={value.length === 3}\n          indeterminate={value.length < 3 && value.length > 0}\n          onChange={onCheckedAll}\n        >\n          \u5168\u9009 / \u53cd\u9009\n        </Checkbox>\n      </Cell>\n      <Cell>\n        <Checkbox.Group value={value} onChange={setValue}>\n          <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n          <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n          <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n        </Checkbox.Group>\n      </Cell>\n    </>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## \u6309\u94ae\u6837\u5f0f\n\n```jsx\nimport { useState } from \'react\';\nimport { Cell, Checkbox } from \'zarm\';\n\nconst Demo = () => {\n  const [value, setValue] = useState([]);\n\n  return (\n    <div>\n      <Cell\n        description={\n          <Checkbox.Group\n            type="button"\n            value={value}\n            onChange={(value) => {\n              setValue(value);\n              console.log(`checked to ${value}`);\n            }}\n          >\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n            <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u666e\u901a\n      </Cell>\n\n      <Cell\n        description={\n          <Checkbox.Group type="button" defaultValue={[\'0\', \'1\']}>\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n            <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u6307\u5b9a\u9ed8\u8ba4\u503c\n      </Cell>\n\n      <Cell\n        description={\n          <Checkbox.Group type="button">\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1" disabled>\n              \u9009\u9879\u4e8c\n            </Checkbox>\n            <Checkbox value="2" disabled checked>\n              \u9009\u9879\u4e09\n            </Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u7981\u7528\u6307\u5b9a\u9879\n      </Cell>\n\n      <Cell\n        description={\n          <Checkbox.Group type="button" shape="rect">\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n            <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u76f4\u89d2\n      </Cell>\n\n      <Cell\n        description={\n          <Checkbox.Group type="button" shape="round">\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n            <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u692d\u5706\u89d2\n      </Cell>\n\n      <Cell\n        description={\n          <Checkbox.Group ghost type="button" defaultValue={[\'2\']}>\n            <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n            <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n            <Checkbox value="2" disabled>\n              \u9009\u9879\u4e09\n            </Checkbox>\n          </Checkbox.Group>\n        }\n      >\n        \u5e7d\u7075\u6309\u94ae\n      </Cell>\n    </div>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## \u5757\u7ea7\u6837\u5f0f\n\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nReactDOM.render(\n  <Cell>\n    <Checkbox.Group block type="button">\n      <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n      <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n      <Checkbox value="2">\u9009\u9879\u4e09</Checkbox>\n    </Checkbox.Group>\n  </Cell>,\n  mountNode,\n);\n```\n\n## \u5217\u8868\u6837\u5f0f\n\n```jsx\nimport { Checkbox } from \'zarm\';\n\nReactDOM.render(\n  <Checkbox.Group type="cell">\n    <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n    <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n    <Checkbox value="2" disabled>\n      \u9009\u9879\u4e09\uff08\u7981\u6b62\u9009\u62e9\uff09\n    </Checkbox>\n  </Checkbox.Group>,\n  mountNode,\n);\n```\n\n## \u5217\u8868\u6837\u5f0f\u7981\u7528\u72b6\u6001\n\n```jsx\nimport { Checkbox } from \'zarm\';\n\nReactDOM.render(\n  <Checkbox.Group disabled type="cell">\n    <Checkbox value="0">\u9009\u9879\u4e00</Checkbox>\n    <Checkbox value="1">\u9009\u9879\u4e8c</Checkbox>\n    <Checkbox value="2" checked>\n      \u9009\u9879\u4e09\n    </Checkbox>\n  </Checkbox.Group>,\n  mountNode,\n);\n```\n\n## API\n\n### Checkbox\n\n| \u5c5e\u6027           | \u7c7b\u578b                                            | \u9ed8\u8ba4\u503c | \u8bf4\u660e                                                |\n| :------------- | :---------------------------------------------- | :----- | :-------------------------------------------------- |\n| type           | string                                          | -      | \u663e\u793a\u7c7b\u578b\uff0c\u53ef\u9009\u503c `button`, `cell`                   |\n| disabled       | boolean                                         | false  | \u662f\u5426\u7981\u7528                                            |\n| value          | string &#124; number                            | -      | \u503c                                                  |\n| checked        | boolean                                         | -      | \u5f53\u524d\u662f\u5426\u9009\u4e2d                                        |\n| defaultChecked | boolean                                         | -      | \u521d\u59cb\u662f\u5426\u9009\u4e2d                                        |\n| indeterminate  | boolean                                         | false  | \u5f53\u524d\u662f\u5426\u4e3a\u672a\u5168\u9009\u72b6\u6001                                |\n| id             | string                                          | -      | \u65b9\u4fbf\u5916\u90e8\u5e26\u6709 for \u5c5e\u6027\u7684 label \u6807\u7b7e\u63a7\u5236\u5f53\u524d checkbox |\n| onChange       | (event?: ChangeEvent<HTMLInputElement>) => void | -      | \u503c\u53d8\u5316\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570                              |\n\n### Checkbox.Group\n\n| \u5c5e\u6027         | \u7c7b\u578b                                    | \u9ed8\u8ba4\u503c   | \u8bf4\u660e                                               |\n| :----------- | :-------------------------------------- | :------- | :------------------------------------------------- |\n| type         | string                                  | -        | \u663e\u793a\u7c7b\u578b\uff0c\u53ef\u9009\u503c `button`, `cell`                  |\n| value        | number[] \\| string[]                    | []       | \u9009\u4e2d\u503c                                             |\n| defaultValue | number[] \\| string[]                    | []       | \u521d\u59cb\u9009\u4e2d\u503c                                         |\n| disabled     | boolean                                 | false    | \u662f\u5426\u7981\u7528                                           |\n| block        | boolean                                 | false    | \u5b50\u9879\u662f\u5426\u4e3a\u5757\u7ea7\u5143\u7d20                                 |\n| onChange     | (values?: number[] \\| string[]) => void | -        | \u503c\u53d8\u5316\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570                             |\n| size         | string                                  | \'xs\'     | \u6309\u94ae\u7c7b\u578b\u65f6\u7684\u5927\u5c0f\uff0c\u53ef\u9009\u503c\u4e3a `lg`\u3001`md`\u3001`sm`\u3001`xs`  |\n| shape        | string                                  | \'radius\' | \u6309\u94ae\u7c7b\u578b\u65f6\u7684\u5f62\u72b6\uff0c\u53ef\u9009\u503c `rect`, `radius`, `round` |\n| ghost        | boolean                                 | false    | \u6309\u94ae\u7c7b\u578b\u65f6\uff0c\u9009\u4e2d\u9879\u6837\u5f0f\u662f\u5426\u4e3a\u5e7d\u7075\u6309\u94ae               |\n'}}]);
//# sourceMappingURL=43.4228f6ea.js.map