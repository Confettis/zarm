{"version":3,"sources":["webpack:///./components/progress/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/62.2ad31c51.js","sourcesContent":["export default \"# Progress 进度条\\n\\n\\n\\n## 基本用法\\n```jsx\\nimport { Progress, Cell, Select, Radio, Stepper } from 'zarm';\\n\\nclass Demo extends React.Component {\\n  state = {\\n    percent: 10,\\n    theme: 'primary',\\n    strokeShape: 'round',\\n    strokeWidth: '',\\n  };\\n\\n  render() {\\n    const { percent, theme, strokeShape, strokeWidth } = this.state;\\n    return (\\n      <>\\n        <div className=\\\"progress\\\">\\n          <Progress\\n            shape=\\\"line\\\"\\n            percent={percent}\\n            theme={theme}\\n            strokeShape={strokeShape}\\n            strokeWidth={strokeWidth}\\n          />\\n        </div>\\n        <div className=\\\"progress\\\">\\n          <Progress\\n            shape=\\\"circle\\\"\\n            percent={percent}\\n            theme={theme}\\n            strokeShape={strokeShape}\\n            strokeWidth={strokeWidth}\\n            text={(percent) => (\\n              <div className=\\\"progress-content\\\">\\n                <span className=\\\"progress-text\\\">{percent}</span>\\n                <span className=\\\"progress-percent\\\">%</span>\\n              </div>\\n            )}\\n          />\\n        </div>\\n        <div className=\\\"progress\\\">\\n          <Progress\\n            shape=\\\"semi-circle\\\"\\n            percent={percent}\\n            theme={theme}\\n            strokeShape={strokeShape}\\n            strokeWidth={strokeWidth}\\n            text={(percent) => (\\n              <div className=\\\"progress-content\\\">\\n                <span className=\\\"progress-text\\\">{percent}</span>\\n                <span className=\\\"progress-percent\\\">%</span>\\n              </div>\\n            )}\\n          />\\n        </div>\\n\\n        <Cell title=\\\"进度\\\">\\n          <Stepper\\n            step={10}\\n            min={0}\\n            max={100}\\n            value={percent}\\n            onChange={(value) => {\\n              if (Number.isNaN(Number(value))) return;\\n              this.setState({\\n                percent: value,\\n              });\\n            }}\\n          />\\n        </Cell>\\n\\n        <Cell title=\\\"主题\\\">\\n          <Select\\n            value={theme}\\n            dataSource={[\\n              { value: 'primary', label: 'primary' },\\n              { value: 'success', label: 'success' },\\n              { value: 'warning', label: 'warning' },\\n              { value: 'danger', label: 'danger' },\\n            ]}\\n            onOk={(selected) => {\\n              this.setState({\\n                theme: selected[0].value,\\n              });\\n            }}\\n          />\\n        </Cell>\\n\\n        <Cell title=\\\"线条形状\\\">\\n          <Radio.Group\\n            compact\\n            type=\\\"button\\\"\\n            value={strokeShape}\\n            onChange={(value) => {\\n              this.setState({\\n                strokeShape: value,\\n              });\\n            }}>\\n            <Radio value=\\\"round\\\">round</Radio>\\n            <Radio value=\\\"rect\\\">rect</Radio>\\n          </Radio.Group>\\n        </Cell>\\n\\n        <Cell title=\\\"线条粗细\\\">\\n          <Stepper\\n            step={1}\\n            min={0}\\n            value={strokeWidth}\\n            onChange={(value) => {\\n              if (Number.isNaN(Number(value))) return;\\n              this.setState({\\n                strokeWidth: value,\\n              });\\n            }}\\n          />\\n        </Cell>\\n      </>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| theme | string | 'primary' | 主题，可选值 `primary`, `success`, `warning`, `danger` |\\n| size | string | 'md' | 大小，可选值 `lg`, `md`, `sm`，number类型的值，或者任何合法的css宽度值 |\\n| shape | string | 'line' | 形状，可选值 `line`, `circle`, `semi-circle` |\\n| percent | number | 0 | 进度百分比（范围：0～100） |\\n| text | (percent?: number) => ReactNode | (percent) => \\\\`${percent}%\\\\` | 进度文本显示 |\\n| strokeShape | string | 'round' | 线条形状，可选值 `round`, `rect` |\\n| strokeWidth | number | - | 线条粗细，单位: px，不设置则根据大小自动调整 |\\n\";"],"sourceRoot":""}