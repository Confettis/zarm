(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{712:function(e,n,t){"use strict";t.r(n),n.default='# Calendar \u65e5\u5386\n\n## \u5e73\u94fa\u9009\u62e9\n\n```jsx\nimport { useState } from \'react\';\nimport { Radio, DateSelect, Cell, Calendar } from \'zarm\';\n\nconst Demo = () => {\n  const [multiple, setMultiple] = useState(true);\n  const [value, setValue] = useState([\'2020-07-29\', \'2020-08-04\']);\n  const [min, setMin] = useState(\'2017-12-29\');\n  const [max, setMax] = useState(\'2020-08-04\');\n  const [custom, setCustom] = useState(false);\n\n  return (\n    <>\n      <Cell title="\u662f\u5426\u591a\u9009">\n        <Radio.Group\n          compact\n          type="button"\n          value={multiple}\n          onChange={(value) => {\n            setMultiple(value);\n          }}\n        >\n          <Radio value={false}>\u5355\u9009</Radio>\n          <Radio value={true}>\u53cc\u9009</Radio>\n        </Radio.Group>\n      </Cell>\n      <Cell title="\u6700\u5c0f\u65e5\u671f">\n        <DateSelect\n          placeholder="Please input start date"\n          mode="date"\n          value={min}\n          onOk={setMin}\n        />\n      </Cell>\n      <Cell title="\u6700\u5927\u65e5\u671f">\n        <DateSelect\n          placeholder="Please input end date"\n          mode="date"\n          value={max}\n          onOk={setMax}\n        />\n      </Cell>\n      <Cell title="\u81ea\u5b9a\u4e49\u6e32\u67d3">\n        <Radio.Group\n          compact\n          type="button"\n          value={custom}\n          onChange={(value) => {\n            setCustom(value);\n          }}\n        >\n          <Radio value={false}>\u5426</Radio>\n          <Radio value={true}>\u662f</Radio>\n        </Radio.Group>\n      </Cell>\n      <Calendar\n        multiple={multiple}\n        value={value}\n        min={min}\n        max={max}\n        dateRender={(date) => {\n          if (custom && /(0|6)/.test(date.getDay())) {\n            return (\n              <div className="custom">\n                <div className="custom__date">{date.getDate()}</div>\n                <div className="custom__text">Closed</div>\n              </div>\n            );\n          }\n          return date.getDate();\n        }}\n        disabledDate={(date) => {\n          if (custom) return /(0|6)/.test(date.getDay());\n          return false;\n        }}\n        onChange={(value) => {\n          setValue(value);\n          console.log(\'onChange\', value);\n        }}\n      />\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| value | Date \\| Date[] | - | \u503c |\n| defaultValue | Date \\| Date[] | - | \u521d\u59cb\u503c |\n| min | Date | new Date() | \u6700\u5c0f\u53ef\u9009\u65e5\u671f |\n| max | Date | min + 1 \u5e74 | \u6700\u5927\u53ef\u9009\u65e5\u671f |\n| multiple | boolean | false | \u662f\u5426\u53cc\u9009 |\n| dateRender | (date?: Date) => void | (date) => date.getDate() | \u65e5\u671f\u6e32\u67d3\u51fd\u6570 |\n| disabledDate | (date?: Date) => boolean | () => false | \u65e5\u671f\u662f\u5426\u7981\u6b62\u9009\u62e9 |\n| onChange | (value?: Date[]) => void | - | \u65e5\u671f\u9009\u62e9\u53d1\u751f\u53d8\u5316\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n'}}]);
//# sourceMappingURL=38.dd3e6447.js.map