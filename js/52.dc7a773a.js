(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{787:function(n,t,e){"use strict";e.r(t),t.default="# Drag \u62d6\u62fd\n\n## \u57fa\u672c\u7528\u6cd5\n\n```jsx\nimport { useEffect, useState, useRef } from 'react';\nimport { Drag, Button } from 'zarm';\n\nlet currentPoint = [0, 0];\n\nconst Demo = () => {\n  const containerRef = useRef();\n  const boxRef = useRef();\n  const [point, setPoint] = useState([0, 0]);\n  const [drag, setDrag] = useState(false);\n\n  useEffect(() => {\n    const { width, height } = boxRef.current.getBoundingClientRect();\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = containerRef.current.getBoundingClientRect();\n\n    currentPoint[0] = Math.round(Math.random() * (containerWidth - width));\n    currentPoint[1] = Math.round(Math.random() * (containerHeight - height));\n    setPoint(currentPoint);\n\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n\n  const onDragStart = (event, dragState) => {\n    console.log('onDragStart', dragState);\n    setDrag(true);\n  };\n\n  const onDragMove = (event, dragState) => {\n    console.log('onDragMove', dragState);\n\n    const { width, height } = boxRef.current.getBoundingClientRect();\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = containerRef.current.getBoundingClientRect();\n\n    let newX = currentPoint[0] + dragState.offsetX;\n    let newY = currentPoint[1] + dragState.offsetY;\n\n    if (newX < 0) {\n      newX = 0;\n    }\n    if (newX > containerWidth - width) {\n      newX = containerWidth - width;\n    }\n    if (newY < 0) {\n      newY = 0;\n    }\n    if (newY > containerHeight - height) {\n      newY = containerHeight - height;\n    }\n\n    setPoint([newX, newY]);\n    return true;\n  };\n\n  const onDragEnd = (event, dragState) => {\n    console.log('onDragEnd', dragState);\n\n    currentPoint = point;\n    setDrag(false);\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        height: 300,\n        backgroundColor: '#5b5c60',\n        position: 'relative',\n      }}\n    >\n      <Drag onDragStart={onDragStart} onDragMove={onDragMove} onDragEnd={onDragEnd}>\n        <div\n          ref={boxRef}\n          style={{\n            display: 'inline-block',\n            transform: `translate3d(${point[0]}px, ${point[1]}px, 0)`,\n          }}\n        >\n          {drag ? (\n            <Button theme=\"danger\">Let me go!</Button>\n          ) : (\n            <Button theme=\"primary\">Catch me~</Button>\n          )}\n        </div>\n      </Drag>\n    </div>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| \u5c5e\u6027        | \u7c7b\u578b                                                                 | \u9ed8\u8ba4\u503c | \u8bf4\u660e                       |\n| :---------- | :------------------------------------------------------------------- | :----- | :------------------------- |\n| onDragStart | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void    | -      | \u89e6\u6478/\u70b9\u51fb \u8d77\u59cb\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 |\n| onDragMove  | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => boolean | -      | \u62d6\u62fd\u79fb\u52a8\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6       |\n| onDragEnd   | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void    | -      | \u89e6\u6478/\u70b9\u51fb \u7ed3\u675f\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 |\n\n### DragState\n\n| \u5c5e\u6027      | \u7c7b\u578b   | \u9ed8\u8ba4\u503c     | \u8bf4\u660e          |\n| :-------- | :----- | :--------- | :------------ |\n| startTime | Date   | new Date() | \u8d77\u59cb\u65f6\u95f4      |\n| startX    | number | -          | \u8d77\u59cb\u70b9 x \u5750\u6807 |\n| startY    | number | -          | \u8d77\u59cb\u70b9 y \u5750\u6807 |\n| offsetX   | number | -          | \u6a2a\u5411\u504f\u79fb\u91cf    |\n| offsetY   | number | -          | \u7eb5\u5411\u504f\u79fb\u91cf    |\n"}}]);
//# sourceMappingURL=52.dc7a773a.js.map