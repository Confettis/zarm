(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{753:function(e,n,t){"use strict";t.r(n),n.default="# DatePicker \u65e5\u671f\u9009\u62e9\u5668\n\n## \u57fa\u672c\u7528\u6cd5\n\n```jsx\nimport { useRef, useReducer } from 'react';\nimport { Cell, Button, DatePicker, Toast } from 'zarm';\n\nconst initState = {\n  date: {\n    visible: false,\n    value: '',\n    wheelDefaultValue: '2018-09-13',\n  },\n  time: {\n    visible: false,\n    value: '',\n  },\n  limitDate: {\n    visible: false,\n    value: '2017-09-13',\n  },\n  specDOM: {\n    visible: false,\n    value: '',\n  },\n};\n\nconst reducer = (state, action) => {\n  const { type, key, visible, value } = action;\n\n  switch (type) {\n    case 'visible':\n      return {\n        ...state,\n        [key]: {\n          ...state[key],\n          visible: !state[key].visible,\n        },\n      };\n\n    case 'value':\n      return {\n        ...state,\n        [key]: {\n          ...state[key],\n          value,\n        },\n      };\n  }\n};\n\nconst Demo = () => {\n  const myRef = useRef();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const setValue = (key, value) => {\n    dispatch({ type: 'value', key, value });\n  };\n\n  const toggle = (key) => {\n    dispatch({\n      type: 'visible',\n      key,\n    });\n  };\n\n  return (\n    <div>\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('date')}>\n            \u9009\u62e9\n          </Button>\n        }\n      >\n        \u9009\u62e9\u65e5\u671f\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('time')}>\n            \u9009\u62e9\n          </Button>\n        }\n      >\n        \u9009\u62e9\u65f6\u95f4\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('limitDate')}>\n            \u9009\u62e9\n          </Button>\n        }\n      >\n        \u9009\u62e9\u65e5\u671f(\u81ea\u5b9a\u4e49)\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('specDOM')}>\n            \u9009\u62e9\n          </Button>\n        }\n      >\n        \u6302\u8f7d\u5230\u6307\u5b9adom\u8282\u70b9\n      </Cell>\n\n      <DatePicker\n        visible={state.date.visible}\n        mode=\"date\"\n        value={state.date.value}\n        wheelDefaultValue={state.date.wheelDefaultValue}\n        onOk={(value) => {\n          setValue('date', value);\n          toggle('date');\n          Toast.show(JSON.stringify(value));\n        }}\n        onCancel={() => toggle('date')}\n      />\n\n      <DatePicker\n        visible={state.time.visible}\n        mode=\"time\"\n        value={state.time.value}\n        onOk={(value) => {\n          setValue('time', value);\n          toggle('time');\n          Toast.show(JSON.stringify(value));\n        }}\n        onCancel={() => toggle('time')}\n      />\n\n      <DatePicker\n        visible={state.limitDate.visible}\n        title=\"\u9009\u62e9\u65e5\u671f\"\n        okText=\"\u786e\u5b9a\"\n        cancelText=\"\u53d6\u6d88\"\n        mode=\"date\"\n        min=\"2007-01-03\"\n        max=\"2019-11-23\"\n        value={state.limitDate.value}\n        onOk={(value) => {\n          setValue('limitDate', value);\n          toggle('limitDate');\n          Toast.show(JSON.stringify(value));\n        }}\n        onCancel={() => toggle('limitDate')}\n      />\n\n      <DatePicker\n        visible={state.specDOM.visible}\n        value={state.specDOM.value}\n        onOk={(value) => {\n          setValue('specDOM', value);\n          toggle('specDOM');\n          Toast.show(JSON.stringify(value));\n        }}\n        onCancel={() => toggle('specDOM')}\n        getContainer={() => myRef.current}\n      />\n\n      <div ref={myRef} id=\"test-div\" style={{ position: 'relative', zIndex: 1 }} />\n    </div>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## DateSelect \u8868\u5355\u65e5\u671f\u9009\u62e9\u5668\n\n```jsx\nimport { useState } from 'react';\nimport { Cell, DateSelect, Icon } from 'zarm';\n\nconst Demo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <Cell title=\"\u65e5\u671f\u9009\u62e9\">\n      <DateSelect\n        className=\"test-dateSelect\"\n        title=\"\u9009\u62e9\u65e5\u671f\"\n        placeholder=\"\u8bf7\u9009\u62e9\u65e5\u671f\"\n        mode=\"date\"\n        min=\"1974-05-16\"\n        max=\"2027-05-15\"\n        value={value}\n        onOk={(value) => {\n          console.log('DateSelect onOk: ', value);\n          setValue(value);\n        }}\n      />\n    </Cell>\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## DatePickerView \u5e73\u94fa\u9009\u62e9\u5668\n\n```jsx\nimport { useState } from 'react';\nimport { DatePickerView } from 'zarm';\n\nconst Demo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <DatePickerView\n      mode=\"datetime\"\n      value={value}\n      min=\"2018-1-13\"\n      onChange={(value) => {\n        console.log('datePickerView => ', value);\n        setValue(value);\n      }}\n    />\n  );\n};\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| \u5c5e\u6027         | \u7c7b\u578b                   | \u9ed8\u8ba4\u503c | \u8bf4\u660e                                                                 |\n| :----------- | :--------------------- | :----- | :------------------------------------------------------------------- |\n| value        | string \\| Date         | -      | \u503c                                                                   |\n| defaultValue | string \\| Date         | -      | \u521d\u59cb\u503c                                                               |\n| mode         | string                 | 'date' | \u6307\u5b9a\u65e5\u671f\u9009\u62e9\u6a21\u5f0f\uff0c\u53ef\u9009\u9879 `year`, `month`, `date`, `time`, `datetime` |\n| min          | string \\| Date         | -      | \u76f8\u5e94 mode \u7684\u6700\u5c0f\u65f6\u95f4                                                 |\n| max          | string \\| Date         | -      | \u76f8\u5e94 mode \u7684\u6700\u5927\u65f6\u95f4                                                 |\n| minuteStep   | number                 | 1      | \u5206\u949f\u95f4\u9694                                                             |\n| disabled     | boolean                | false  | \u662f\u5426\u7981\u7528                                                             |\n| onChange     | (value?: Date) => void | -      | \u503c\u53d8\u5316\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570                                               |\n\n### \u4ec5 DatePicker & DateSelect \u652f\u6301\u7684\u5c5e\u6027\n\n| \u5c5e\u6027              | \u7c7b\u578b                                 | \u9ed8\u8ba4\u503c        | \u8bf4\u660e                                           |\n| :---------------- | :----------------------------------- | :------------ | :--------------------------------------------- |\n| visible           | boolean                              | false         | \u662f\u5426\u5c55\u793a                                       |\n| title             | string                               | '\u8bf7\u9009\u62e9'      | \u9009\u62e9\u5668\u6807\u9898                                     |\n| cancelText        | string                               | '\u53d6\u6d88'        | \u53d6\u6d88\u680f\u6587\u5b57                                     |\n| okText            | string                               | '\u786e\u5b9a'        | \u786e\u5b9a\u680f\u6587\u5b57                                     |\n| maskClosable      | boolean                              | true          | \u662f\u5426\u70b9\u51fb\u906e\u7f69\u5c42\u65f6\u5173\u95ed\uff0c\u9700\u8981\u548c onCancel \u4e00\u8d77\u4f7f\u7528 |\n| wheelDefaultValue | string \\| Date                       | -             | \u6eda\u8f6e\u9ed8\u8ba4\u505c\u7559\u7684\u65e5\u671f\u4f4d\u7f6e                         |\n| onOk              | (value?: Date) => void               | -             | \u70b9\u51fb\u786e\u5b9a\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570                       |\n| onCancel          | () => void                           | -             | \u70b9\u51fb\u53d6\u6d88\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570                       |\n| mountContainer    | HTMLElement &#124; () => HTMLElement | document.body | \u6307\u5b9a DatePicker \u6302\u8f7d\u7684 HTML \u8282\u70b9               |\n\n### \u4ec5 DateSelect \u652f\u6301\u7684\u5c5e\u6027\n\n| \u5c5e\u6027        | \u7c7b\u578b    | \u9ed8\u8ba4\u503c   | \u8bf4\u660e                                                                                                 |\n| :---------- | :------ | :------- | :--------------------------------------------------------------------------------------------------- |\n| placeholder | string  | '\u8bf7\u9009\u62e9' | \u8f93\u5165\u63d0\u793a\u4fe1\u606f                                                                                         |\n| hasArrow    | boolean | true     | \u662f\u5426\u663e\u793a\u7bad\u5934                                                                                         |\n| format      | string  | -        | \u683c\u5f0f\u5316\u663e\u793a\u503c\u3002\u4f8b\uff1aformat=\"yyyy \u5e74 MM \u6708 dd \u65e5\"<br /> \u5e74:`yyyy`, \u6708:`MM`, \u65e5:`dd`, \u65f6:`hh`, \u5206:`mm`\u3002 |\n"}}]);
//# sourceMappingURL=51.cc5e6788.js.map