(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{689:function(n,t,e){"use strict";e.r(t),t.default="# Drag \u62d6\u62fd\n\n\n\n## \u57fa\u672c\u7528\u6cd5\n\n```jsx\nimport { Drag, Button } from 'zarm';\n\nclass Demo extends React.Component {\n  currentX = 0;\n\n  currentY = 0;\n\n  state = {\n    x: 0,\n    y: 0,\n    drag: false,\n  };\n\n  componentDidMount() {\n    const { width, height } = this.box.getBoundingClientRect();\n    const { width: containerWidth, height: containerHeight } = this.container.getBoundingClientRect();\n\n    this.currentX = Math.round(Math.random() * (containerWidth - width));\n    this.currentY = Math.round(Math.random() * (containerHeight - height));\n\n    this.setState({\n      x: this.currentX,\n      y: this.currentY,\n    });\n  }\n\n  onDragStart = (event, dragState) => {\n    console.log('onDragStart', dragState);\n\n    this.setState({\n      drag: true,\n    });\n  }\n\n  onDragMove = (event, dragState) => {\n    console.log('onDragMove', dragState);\n\n    const { width, height } = this.box.getBoundingClientRect();\n    const { width: containerWidth, height: containerHeight } = this.container.getBoundingClientRect();\n\n    let newX = this.currentX + dragState.offsetX;\n    let newY = this.currentY + dragState.offsetY;\n\n    if (newX < 0) {\n      newX = 0;\n    }\n    if (newX > containerWidth - width) {\n      newX = containerWidth - width;\n    }\n    if (newY < 0) {\n      newY = 0;\n    }\n    if (newY > containerHeight - height) {\n      newY = containerHeight - height;\n    }\n\n    this.setState({\n      x: newX,\n      y: newY,\n    });\n\n    return true;\n  }\n\n  onDragEnd = (event, dragState) => {\n    console.log('onDragEnd', dragState);\n\n    const { x, y } = this.state;\n    this.currentX = x;\n    this.currentY = y;\n\n    this.setState({\n      drag: false,\n    });\n  }\n\n  render() {\n    const { x, y, drag } = this.state;\n\n    return (\n      <div\n        ref={(el) => { this.container = el; }}\n        style={{\n          height: 300,\n          backgroundColor: '#ddd',\n          position: 'relative'\n        }}\n      >\n        <Drag\n          onDragStart={this.onDragStart}\n          onDragMove={this.onDragMove}\n          onDragEnd={this.onDragEnd}\n        >\n          <div\n            ref={(el) => { this.box = el; }}\n            style={{\n              display: 'inline-block',\n              transform: `translate3d(${x}px, ${y}px, 0)`,\n            }}\n          >\n            {\n              drag\n                ? <Button theme=\"danger\">Let me go!</Button>\n                : <Button theme=\"primary\">Catch me~</Button>\n            }\n          </div>\n        </Drag>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| onDragStart | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void | - | \u89e6\u6478/\u70b9\u51fb \u8d77\u59cb\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 |\n| onDragMove | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => boolean | - | \u62d6\u62fd\u79fb\u52a8\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 |\n| onDragEnd | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void | - | \u89e6\u6478/\u70b9\u51fb \u7ed3\u675f\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 |\n\n### DragState\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| startTime | Date | new Date() | \u8d77\u59cb\u65f6\u95f4 |\n| startX | number | - | \u8d77\u59cb\u70b9x\u5750\u6807 |\n| startY | number | - | \u8d77\u59cb\u70b9y\u5750\u6807 |\n| offsetX | number | - | \u6a2a\u5411\u504f\u79fb\u91cf |\n| offsetY | number | - | \u7eb5\u5411\u504f\u79fb\u91cf |"}}]);
//# sourceMappingURL=45.f5234060.js.map