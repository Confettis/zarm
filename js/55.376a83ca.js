(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{721:function(n,e,o){"use strict";o.r(e),e.default="# Modal \u6a21\u6001\u6846\n\n\n\n## \u57fa\u672c\u7528\u6cd5\n```jsx\nimport { useState, useRef, useReducer } from 'react';\nimport { Modal, Cell, Button, Select } from 'zarm';\n\nconst initState = {\n  normal: {\n    visible: false,\n  },\n  hasFooter: {\n    visible: false,\n  },\n  closable: {\n    visible: false,\n  },\n  onlyBody: {\n    visible: false,\n  },\n  animation: {\n    visible: false,\n    animationType: 'fade',\n  },\n  customContainer: {\n    visible: false,\n  },\n}\n\nconst reducer = (state, action) => {\n  const { type, key, visible, animationType } = action;\n\n  switch (type) {\n    case 'visible':\n      return {\n        ...state,\n        [key]: {\n          ...state[key],\n          visible: !state[key].visible,\n        }\n      };\n    \n    case 'animation':\n      return {\n        ...state,\n        [key]: {\n          ...state[key],\n          animationType,\n        }\n      };\n  }\n};\n\nconst Demo = () => {\n  const myRef = useRef();\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const toggle = (key) => dispatch({ type: 'visible', key });\n\n  return (\n    <>\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('normal')}>\u5f00\u542f</Button>\n        }\n      >\n        \u666e\u901a\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('hasFooter')}>\u5f00\u542f</Button>\n        }\n      >\n        \u6709\u5e95\u90e8\u6309\u94ae\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('closable')}>\u5f00\u542f</Button>\n        }\n      >\n        \u906e\u7f69\u5c42\u53ef\u5173\u95ed\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('onlyBody')}>\u5f00\u542f</Button>\n        }\n      >\n        \u65e0\u5934\u90e8\uff0c\u65e0\u5e95\u90e8\n      </Cell>\n\n      <Cell\n        title=\"\u52a8\u753b\u6548\u679c\"\n        description={\n          <Button size=\"xs\" onClick={() => toggle('animation')}>\u5f00\u542f</Button>\n        }\n      >\n        <Select\n          value={state.animation.animationType}\n          dataSource={[\n            { value: 'fade', label: '\u6de1\u51fa\u6de1\u5165\u6548\u679c(fade)' },\n            { value: 'zoom', label: '\u7f29\u653e\u6548\u679c(zoom)' },\n            { value: 'rotate', label: '\u65cb\u8f6c\u6548\u679c(rotate)' },\n            { value: 'door', label: '\u5f00\u5173\u95e8\u6548\u679c(door)' },\n            { value: 'flip', label: '\u7ffb\u8f6c\u6548\u679c(flip)' },\n            { value: 'moveUp', label: '\u79fb\u51fa\u79fb\u5165\u6548\u679c(moveUp)' },\n            { value: 'moveDown', label: '\u79fb\u51fa\u79fb\u5165\u6548\u679c(moveDown)' },\n            { value: 'moveLeft', label: '\u79fb\u51fa\u79fb\u5165\u6548\u679c(moveLeft)' },\n            { value: 'moveRight', label: '\u79fb\u51fa\u79fb\u5165\u6548\u679c(moveRight)' },\n            { value: 'slideUp', label: '\u6ed1\u51fa\u6ed1\u5165\u6548\u679c(slideUp)' },\n            { value: 'slideDown', label: '\u6ed1\u51fa\u6ed1\u5165\u6548\u679c(slideDown)' },\n            { value: 'slideLeft', label: '\u6ed1\u51fa\u6ed1\u5165\u6548\u679c(slideLeft)' },\n            { value: 'slideRight', label: '\u6ed1\u51fa\u6ed1\u5165\u6548\u679c(slideRight)' },\n          ]}\n          onOk={(selected) => {\n            dispatch({\n              type: 'animation',\n              key: 'animation',\n              animationType: selected.map(item => item.value),\n            });\n          }}\n        />\n      </Cell>\n\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={() => toggle('customContainer')}>\u5f00\u542f</Button>\n        }\n      >\n        \u6302\u8f7d\u5230\u6307\u5b9adom\u8282\u70b9\n      </Cell>\n\n      <div\n        id=\"test-div\"\n        style={{ position: 'relative', zIndex: 1 }}\n        ref={myRef} \n      />\n\n      <Modal\n        visible={state.normal.visible}\n        title=\"\u6807\u9898\"\n        closable\n        onCancel={() => toggle('normal')}\n      >\n        \u6a21\u6001\u6846\u5185\u5bb9\n      </Modal>\n\n      <Modal\n        title=\"\u6807\u9898\"\n        visible={state.hasFooter.visible}\n        footer={\n          <Button\n            block\n            theme=\"primary\"\n            onClick={() => toggle('hasFooter')}\n          >\u786e\u8ba4</Button>\n        }\n      >\n        <p>\u6a21\u6001\u6846\u5185\u5bb9</p> \n      </Modal>\n\n      <Modal\n        visible={state.closable.visible}\n        title=\"\u6807\u9898\"\n        maskClosable\n        onCancel={() => toggle('closable')}\n      >\n        \u70b9\u51fb\u906e\u7f69\u5c42\u5173\u95ed\n      </Modal>\n\n      <Modal\n        visible={state.onlyBody.visible}\n        maskClosable\n        onCancel={() => toggle('onlyBody')}\n      >\n        \u65e0\u5934\u90e8\uff0c\u65e0\u5e95\u90e8\n      </Modal>\n\n      <Modal\n        visible={state.animation.visible}\n        animationType={state.animation.animationType}\n        maskClosable\n        onCancel={() => toggle('animation')}\n      >\n          <div style={{ height: 100 }}>\n            \u5f53\u524d\u4f7f\u7528\u7684\u52a8\u753b\u7c7b\u578banimationType\uff1a'{state.animation.animationType}'\n          </div>\n      </Modal>\n\n      <Modal\n        visible={state.customContainer.visible}\n        maskClosable\n        onCancel={() => toggle('customContainer')}\n        mountContainer={() => myRef.current}\n      >\n        \u6302\u8f7d\u5230\u6307\u5b9adom\u8282\u70b9\n      </Modal>\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u8b66\u544a\u6846 Alert\n```jsx\nimport { Cell, Button, Confirm, Modal  } from 'zarm';\n\nconst Demo = () => {\n  return (\n    <>\n      <Cell\n        description={\n          <Button\n            size=\"xs\"\n            onClick={() => {\n              const modal = Modal.alert({\n                className: 'test',\n                title: '\u9759\u6001\u8c03\u7528\u7684title',\n                content: '\u9759\u6001\u8c03\u7528\u7684body',\n                onCancel: () => {\n                  modal.hide();\n                }\n              });\n            }}\n          >\u5f00\u542f</Button>\n        }\n      >\n        \u9759\u6001\u8c03\u7528\uff08\u9759\u6001\u5173\u95ed\uff09\n      </Cell>\n\n      <Cell\n        description={\n          <Button\n            size=\"xs\"\n            onClick={() => {\n              const modal = Modal.alert({\n                title: '\u9759\u6001\u8c03\u7528\u7684title',\n                content: '\u9759\u6001\u8c03\u7528\u7684body\uff0c\u4f7f\u7528promise\u5173\u95ed',\n                onCancel: () => {\n                  return new Promise((resolve, reject) => {\n                    resolve();\n                    // setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n                  }).catch(() => {\n                    window.alert('\u51fa\u9519\u5566\uff0c\u5f39\u7a97\u65e0\u6cd5\u5173\u95ed\uff0c\u7ee7\u7eed\u70b9\u51fb\u8bd5\u8bd5');\n                    return false; // \u8fd4\u56defalse\uff0c\u53ef\u4f7f\u5f39\u7a97\u65e0\u6cd5\u5173\u95ed\n                  })\n                }\n              });\n            }}\n          >\u5f00\u542f</Button>\n        }\n      >\n        \u9759\u6001\u8c03\u7528\uff08\u4f7f\u7528promise\u5173\u95ed\uff09\n      </Cell>\n\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u786e\u8ba4\u6846 Confirm\n```jsx\nimport { Cell, Button, Confirm, Modal  } from 'zarm';\n\nconst Demo = () => {\n  return (\n    <>\n      <Cell\n        description={\n          <Button\n            size=\"xs\"\n            onClick={() => {\n              const modal = Modal.confirm({\n                title: '\u786e\u8ba4\u4fe1\u606f',\n                content: '\u9759\u6001\u8c03\u7528\u7684body',\n                onCancel: () => {\n                  console.log('\u70b9\u51fbcancel');\n                },\n                onOk: () => {\n                  console.log('\u70b9\u51fbok');\n                },\n              });\n            }}\n          >\u5f00\u542f</Button>\n        }\n      >\n        \u9759\u6001\u8c03\u7528\uff08\u9759\u6001\u5173\u95ed\uff09\n      </Cell>\n\n      <Cell\n        description={\n          <Button\n            size=\"xs\"\n            onClick={() => {\n              const modal = Modal.confirm({\n                title: '\u9759\u6001\u8c03\u7528\u7684title',\n                content: '\u9759\u6001\u8c03\u7528\u7684body\uff0c\u4f7f\u7528promise\u5173\u95ed',\n                onCancel: () => {\n                  return new Promise((resolve, reject) => {\n                    resolve();\n                    // setTimeout(Math.random() > 0.5 ? resolve : reject, 500);\n                  }).catch(() => {\n                    window.alert('\u51fa\u9519\u5566\uff0c\u5f39\u7a97\u65e0\u6cd5\u5173\u95ed\uff0c\u7ee7\u7eed\u70b9\u51fb\u8bd5\u8bd5');\n                    return false; // \u8fd4\u56defalse\uff0c\u53ef\u4f7f\u5f39\u7a97\u65e0\u6cd5\u5173\u95ed\n                  })\n                }\n              });\n            }}\n          >\u5f00\u542f</Button>\n        }\n      >\n        \u9759\u6001\u8c03\u7528\uff08\u4f7f\u7528promise\u5173\u95ed\uff09\n      </Cell>\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n## API\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| shape | string | 'radius' | \u5f62\u72b6\uff0c\u53ef\u9009\u503c `rect`\u3001`radius` |\n| visible | boolean | false | \u662f\u5426\u663e\u793a |\n| animationType | string | 'fade' | \u52a8\u753b\u6548\u679c\uff0c\u53ef\u9009\u503c `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\n| animationDuration | number | 200 | \u52a8\u753b\u6267\u884c\u65f6\u95f4\uff08\u5355\u4f4d\uff1a\u6beb\u79d2\uff09 |\n| width | string &#124; number | '70%' | \u5bbd\u5ea6 |\n| mask | boolean | true | \u662f\u5426\u5c55\u793a\u906e\u7f69\u5c42 |\n| maskType | string | 'normal' | \u906e\u7f69\u5c42\u7684\u7c7b\u578b\uff0c\u53ef\u9009\u503c `transparent`, `normal` |\n| maskClosable | boolean | false | \u662f\u5426\u70b9\u51fb\u906e\u7f69\u5c42\u65f6\u5173\u95ed\uff0c\u9700\u8981\u548conCancel\u4e00\u8d77\u4f7f\u7528 |\n| closable | boolean | false | \u53f3\u4e0a\u89d2\u662f\u5426\u663e\u793a\u5173\u95ed\u6309\u94ae\uff0c\u9700\u8981\u548conCancel\u4e00\u8d77\u4f7f\u7528 |\n| onCancel | () => void | - | \u5982\u679cmaskClosable\u6216closable\u4e3atrue\uff0c\u90a3\u4e48\u70b9\u51fb\u906e\u7f69\u6216\u8005\u53f3\u4e0a\u89d2\u5173\u95ed\u6309\u94ae\u4f1a\u8c03\u7528\u6b64\u51fd\u6570 |\n| title | ReactNode | - | \u6807\u9898 |\n| footer | ReactNode | - | \u5f39\u7a97\u5e95\u90e8\u5185\u5bb9 |\n| destroy | boolean | true | \u5f39\u5c42\u5173\u95ed\u540e\u662f\u5426\u79fb\u9664\u8282\u70b9 |\n| afterOpen | () => void | - | \u6a21\u6001\u6846\u6253\u5f00\u540e\u7684\u56de\u8c03 |\n| afterClose | () => void | - | \u6a21\u6001\u6846\u5173\u95ed\u540e\u7684\u56de\u8c03 |\n| mountContainer | HTMLElement &#124; () => HTMLElement | document.body | \u6307\u5b9a Modal \u6302\u8f7d\u7684 HTML \u8282\u70b9 |\n\n## \u9759\u6001\u65b9\u6cd5\n\n```js\n// \u663e\u793a\u8b66\u544a\u6846\uff0c\u4e0d\u4f20onCancel\u4e5f\u53ef\u5173\u95ed\uff0c\u5982\u9700\u505a\u66f4\u591a\u64cd\u4f5c\uff0c\u53c2\u8003\u4e0b\u65b9confirm\u7684\u4f8b\u5b50\nconst alert = Modal.alert({\n  title: '\u9759\u6001\u8c03\u7528\u7684title',\n  content: '\u9759\u6001\u8c03\u7528\u7684body',\n});\n\n// \u663e\u793a\u786e\u8ba4\u6846\uff0c\u82e5\u5173\u95ed\u65f6\u9700\u8981promise\uff0conOk\u3001onCancel\u5747\u652f\u6301promise\nconst confirm = Modal.confirm({\n  title: '\u9759\u6001\u8c03\u7528\u7684title',\n  content: '\u9759\u6001\u8c03\u7528\u7684body\uff0c\u4f7f\u7528promise\u5173\u95ed',\n  onOk: () => {\n    return fetch.get('xxx.api').then((res) => {\n      if(res.code === 0) { \n        return true; // \u5173\u95ed\u5f39\u7a97\n      } else { \n        return false; // \u963b\u6b62\u5f39\u7a97\u5173\u95ed\n      }\n    }).catch(...);\n  }\n});\n\n```\n\n  \n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| title | ReactNode | - | \u5f39\u51fa\u6846\u7684\u6807\u9898 |\n| content | ReactNode | - | \u5f39\u51fa\u6846\u7684\u5185\u5bb9 |\n| cancelText | ReactNode | '\u5173\u95ed'(Alert)/'\u53d6\u6d88'(Confirm) | \u53d6\u6d88\u6309\u94ae\u7684\u5185\u5bb9 |\n| okText | ReactNode | '\u786e\u8ba4' | \u786e\u8ba4\u6309\u94ae\u7684\u5185\u5bb9 |\n| onOk | () => void | - | \u70b9\u51fb\u201c\u786e\u8ba4\u201d\u540e\u7684\u56de\u8c03\u51fd\u6570(Confirm) |\n| onCancel | () => void | - | \u70b9\u51fb\u201c\u5173\u95ed/\u53d6\u6d88\u201d\u540e\u7684\u56de\u8c03\u51fd\u6570 |\n\n\n\n"}}]);
//# sourceMappingURL=55.376a83ca.js.map