(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{661:function(n,e,o){"use strict";o.r(e),e.default="# Keyboard \u865a\u62df\u952e\u76d8\n\n\n\n## Keyboard \u5e73\u94fa\u952e\u76d8\n```jsx\nimport { useState } from 'react';\nimport { Cell, Radio, Keyboard } from 'zarm';\n\nconst Demo = () => {\n  const [type, setType] = useState('number');\n\n  return (\n    <>\n      <Cell\n        title=\"\u952e\u76d8\u7c7b\u578b\"\n        description={\n          <Radio.Group\n            compact\n            type=\"button\"\n            value={type}\n            onChange={setType}\n          >\n            <Radio value=\"number\">\u6570\u5b57\u952e\u76d8</Radio>\n            <Radio value=\"price\">\u91d1\u989d\u952e\u76d8</Radio>\n            <Radio value=\"idcard\">\u8eab\u4efd\u8bc1\u952e\u76d8</Radio>\n          </Radio.Group>\n        }\n      />\n      <Keyboard type={type} onKeyClick={(key) => console.log(key)} />\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## KeyboardPicker \u952e\u76d8\u89e6\u53d1\u5668\n```jsx\nimport { useState } from 'react';\nimport { Cell, Button, KeyboardPicker, Input } from 'zarm';\n\nconst Demo = () => {\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = useState('');\n\n  const toggle = () => {\n    setVisible(!visible);\n  };\n\n  const onKeyClick = (key) => {\n    console.log(key);\n    if (['close', 'ok'].indexOf(key) > -1) {\n      toggle();\n      return;\n    }\n\n    const value = [].concat(value);\n    const newValue = (key === 'delete')\n      ? value.slice(0, value.length - 1)\n      : value + key;\n\n    if (newValue !== value) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <>\n      <Cell\n        description={\n          <Button size=\"xs\" onClick={toggle}>{visible ? '\u5173\u95ed' : '\u5f00\u542f'}</Button>\n        }\n      >\n        \u62fe\u53d6\u5668\u89e6\u53d1\u65b9\u5f0f\n      </Cell>\n\n      <KeyboardPicker\n        visible={visible}\n        onKeyClick={onKeyClick}\n      />\n    </>\n  );\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| type | string | 'number' | \u952e\u76d8\u7c7b\u578b\uff0c\u53ef\u9009\u503c `number`\u3001`price`\u3001`idcard` |\n| onKeyClick | (key?: string) => void | - | \u70b9\u51fb\u6309\u952e\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n\n### \u4ec5 KeyboardPicker \u652f\u6301\u7684\u5c5e\u6027\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| visible | boolean | false | \u662f\u5426\u5c55\u793a |\n| destroy | boolean | true | \u5f39\u5c42\u5173\u95ed\u540e\u662f\u5426\u79fb\u9664\u8282\u70b9 |\n"}}]);
//# sourceMappingURL=50.0242f8ba.js.map